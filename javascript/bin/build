#!/bin/bash

# This script is used to build one template.bundle.min.js that contains all the templates.
pushd `dirname "$0"` > /dev/null 2>&1;
trap "popd > /dev/null" EXIT;

function demodule {
    # Remove the module wrapper
    cat "$1" | grep -vE "^\s*(import|export|module)\s";
}

SCRIPT_TOKENIZE="`demodule ../tokenize.js`";
SCRIPT_EVALUATE="`demodule ../prepare.js`";
SCRIPT_TEMPLATE="`demodule ../template.js`";

# Print all up to a line having keyword @INSERT
(
    echo "/*! Z Template | (c) Daniel Sevcik | MIT License | https://github.com/webdevelopers-eu/z-template */";
    echo "window.zTemplate = (function() {";
    echo "$SCRIPT_TOKENIZE";
    echo "$SCRIPT_EVALUATE";
    echo "$SCRIPT_TEMPLATE";
    echo " return zTemplate;})();";
) > ../template.bundle.js

#cat ../template.bundle.js | uglifyjs --source-map "url='template.bundle.min.js.map'" --comments "/^!/" -o ../template.bundle.min.js --compress --mangle --toplevel --mangle-props reserved=['zTemplate'];
babel-minify ../template.bundle.js --mangle --simplify --booleans --memberExpressions --mergeVars --numericLiterals --propertyLiterals -o ../template.bundle.min.js


ls -lah `readlink -f ../template.bundle.min.js`;

popd > /dev/null;
trap "" EXIT;
